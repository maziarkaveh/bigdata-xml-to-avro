/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.uis.bigdata.hadoop.model.avro;

@SuppressWarnings("all")
public class DiscussionThreadingInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DiscussionThreadingInfo\",\"namespace\":\"no.uis.bigdata.hadoop.model.avro\",\"fields\":[{\"name\":\"threadSubject\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"threadParent\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"threadAncestor\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"threadPage\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"threadID\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"threadAuthor\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"threadEditStatus\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"threadType\",\"type\":\"string\",\"default\":\"\"}]}");
    public java.lang.CharSequence threadSubject;
    public java.lang.CharSequence threadParent;
    public java.lang.CharSequence threadAncestor;
    public java.lang.CharSequence threadPage;
    public java.lang.CharSequence threadID;
    public java.lang.CharSequence threadAuthor;
    public java.lang.CharSequence threadEditStatus;
    public java.lang.CharSequence threadType;

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public DiscussionThreadingInfo(no.uis.bigdata.hadoop.model.jaxb.DiscussionThreadingInfo discussionthreadinginfo) {
        threadSubject = discussionthreadinginfo.getThreadSubject();
        threadParent = discussionthreadinginfo.getThreadParent().toString();
        threadAncestor = discussionthreadinginfo.getThreadAncestor().toString();
        threadPage = discussionthreadinginfo.getThreadPage();
        threadID = discussionthreadinginfo.getThreadID().toString();
        threadAuthor = discussionthreadinginfo.getThreadAuthor();
        threadEditStatus = discussionthreadinginfo.getThreadEditStatus();
        threadType = discussionthreadinginfo.getThreadType();
    }

    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return threadSubject;
            case 1:
                return threadParent;
            case 2:
                return threadAncestor;
            case 3:
                return threadPage;
            case 4:
                return threadID;
            case 5:
                return threadAuthor;
            case 6:
                return threadEditStatus;
            case 7:
                return threadType;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                threadSubject = (java.lang.CharSequence) value$;
                break;
            case 1:
                threadParent = (java.lang.CharSequence) value$;
                break;
            case 2:
                threadAncestor = (java.lang.CharSequence) value$;
                break;
            case 3:
                threadPage = (java.lang.CharSequence) value$;
                break;
            case 4:
                threadID = (java.lang.CharSequence) value$;
                break;
            case 5:
                threadAuthor = (java.lang.CharSequence) value$;
                break;
            case 6:
                threadEditStatus = (java.lang.CharSequence) value$;
                break;
            case 7:
                threadType = (java.lang.CharSequence) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }
}
